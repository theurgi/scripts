#!/usr/bin/env bash

# Search Buku bookmarks with fzf and open them in the browser.
#
# Dependencies:
# - buku: https://github.com/jarun/buku
# - fzf: https://github.com/junegunn/fzf
# - jq: https://stedolan.github.com/jq
#
# Usage:
# - Set BUKU_DATABASE to the path of your Buku database.
# - Run bookmarks.
# - Search for bookmarks with fzf.
# - Press Enter to open the selected bookmark in your default browser or escape to exit.
#
# TODO:
# - Create keybind for copying (instead of opening) bookmark during fzf search.
# - Make colors configurable.

BUKU_DATABASE="$HOME/.local/share/buku/bookmarks.db"

for arg in "$@"; do
	[ "$arg" = "--copy" ] || [ "$arg" = "-c" ] && copy=1
done

main() {
	bookmark_id=(
		$(
			sqlite3 -separator $'\t' "$BUKU_DATABASE" "SELECT id,url,tags FROM bookmarks" |
				# Format bookmarks for fzf search.
				awk -F $'\t' '{
					# Color IDs blue.
					gsub(/^[0-9]+/, "\033[34m&\033[0m", $1);
					# Remove protocol and www. from URLs.
					gsub(/https?:\/\//,"",$2);
					gsub(/www\./,"",$2);
					# Truncate URLs to 30 characters and add cyan ellipsis.
					((length($2) > 30)) && $2 = substr($2, 1, 27) "\033[36m...\033[0m"
					# Remove leading and trailing commas from tags.
					gsub(/(^,|,$)/,"",$3);
					# Color commas separating tags cyan.
					gsub(/,/, "\033[36m,\033[0m", $3);
					# Pipe database entries to fzf.
					printf "%s\t%-30s\t%s\n", $1, $2, $3
		  	}' |
				# Compose fzf preview window.
				fzf --ansi --preview "
					echo {} |
					# Extract ID from fzf output.
					cut -d $'\t' -f 1 |
					# Pass ID to buku and print JSON.
					xargs -I {} buku -p {} -j |
					# Remove extraneous Buku output.
					tail -n +2 |
					# Format and colorize JSON.
					jq -r 'def colors:
						{
							\"blue\": \"\u001b[34m\",
							\"green\": \"\u001b[32m\",
							\"cyan\": \"\u001b[36m\",
							\"white\": \"\u001b[37m\",
						};
						colors.blue + .title,
						colors.green + .description,
						colors.cyan + .tags,
						colors.white + .uri' |
					# Remove commas from tags.
					tr ',' ' ' |
					# Wrap lines.
					fold -w $(($(tput cols) - 5)) -s
		    " --preview-window=up,wrap |
				# Extract ID from fzf output.
				cut -d $'\t' -f 1
		)
	)

	[[ -z $bookmark_id ]] && exit 0

	if [[ -n $copy ]]; then
		buku -p ${bookmark_id[@]} -j | jq -r '.uri' | tr -d '\n' | pbcopy
	else
		buku --open ${bookmark_id[@]}
	fi
}

main
